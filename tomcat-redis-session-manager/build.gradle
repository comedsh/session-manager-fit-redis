apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'

group = 'com.orangefunction'
version = '2.0.0'

repositories {
  mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'test/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}  

compileJava {
  sourceCompatibility = 1.7
  targetCompatibility = 1.7
}

dependencies {
  compile group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '7.0.27'
  
  compile group: 'redis.clients', name: 'jedis', version: '2.8.1'
  compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.2'
  //compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
  
  //junit changed as essential dependences causes the org.ranran.domain.User is used for frontend
  compile group: 'junit', name: 'junit', version: '4.+' 
  testCompile 'org.hamcrest:hamcrest-core:1.3'
  testCompile 'org.hamcrest:hamcrest-library:1.3'
  testCompile 'org.mockito:mockito-all:1.9.5'
  testCompile group: 'org.apache.tomcat', name: 'tomcat-coyote', version: '7.0.27'
}


task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

// 导出依赖包 
// @TODO 过滤
task copyJars(type: Copy) {
  from configurations.runtime
  into 'build/libs' // 目标位置
}

/*
  尝试过配置 WTP 的 Web Deployment Assembly，自动将 tomcat-redis-session-manager 打包到 ${TOMCAT_HOME}/lib 下，可是，默认的路径是 WEB-INF/lib 且不能改变.... 
  所以，写了这个任务，让 Gradle 来执行构建
  
  **** 执行 gradle clean deploy **** 
  
*/
task deploy(type:Copy, overwrite:true){

	dependsOn build
	
	dependsOn copyJars
	
	from 'build/libs/tomcat-redis-session-manager-2.0.0.jar'
	into '/Users/mac/programs/apache-tomcat-7.0.61/lib'
	
	from 'build/libs/commons-pool2-2.4.2.jar'
	into '/Users/mac/programs/apache-tomcat-7.0.61/lib'

	from 'build/libs/jedis-2.8.1.jar'
	into '/Users/mac/programs/apache-tomcat-7.0.61/lib'
	
	
}

// 在 build/libs 生成 javadoc.jar 和 sources.jar，默认编译后可执行的 .jar 文件会生成
artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}
